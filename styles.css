/***************************/
/*    Table of Contents    */
/*                         */
/* Global Styles --- ln11  */
/* Typography ------ ln34  */
/* Layout ---------- ln70  */
/* Components ------ ln179 */
/* Media Queries --- ln377 */
/*                         */
/***************************/

:root {
  /* Range input value. Used to calculate 
   background length and make left side of
   track green */
  --bg-slider-value: 2;
}

body {
  box-sizing: border-box;
  font-family: Manrope, Arial, Helvetica, sans-serif;
  background-image: url(images/bg-pattern.svg);
  background-repeat: no-repeat;
  color: hsl(225, 20%, 60%);
}

a {
  text-decoration: none;
}

/**************/
/* Typography */
/**************/

h1,
.pricing__span {
  color: hsl(227, 35%, 25%);
}
.intro__p,
.pricing {
  font-size: 15px;
}

.pageviews {
  text-transform: uppercase;
  letter-spacing: 1px;
}

.pricing__span {
  font-size: 2rem;
  font-weight: 800;
  vertical-align: middle;
}

.billing,
.benefits,
.button-trial,
.pageviews {
  font-size: 12px;
}

.benefits__span {
  font-size: 16px;
  color: hsl(174, 90%, 83%);
}

/**********/
/* Layout */
/**********/

.intro {
  text-align: center;
  background-image: url(images/pattern-circles.svg);
  background-repeat: no-repeat;
  background-position: center;
  padding: 2em 0;
}

/* The pricing component is composed of two halves, a top
   and a bottom. The top is a grid container. The bottom is
   a flex container. I did that because the elements in the
   top half design flip-flop between desktop and mobile. They
   don't re-flow in a normal manner.
*/

.pricing-comp-container-top,
.pricing-comp-container-bottom {
  padding: 2em;
  width: 80%;
  max-width: 550px;
}

.pricing-comp-container-top {
  display: grid;
  display: -ms-grid;
  grid-template: 50px 75px 75px 50px / 1fr;
  -ms-grid-columns: 1fr;
  -ms-grid-rows: 50px 75px 75px 50px;
  grid-template-areas:
    "pageviews"
    "slider"
    "pricing"
    "toggle";
  margin: 5em auto 0;
}

.pageviews {
  grid-area: pageviews;
  justify-self: center;
  -ms-grid-row: 1;
  -ms-grid-column: 1;
  -ms-grid-column-align: center;
}

.pricing {
  grid-area: pricing;
  justify-self: center;
  -ms-grid-row: 3;
  -ms-grid-column: 1;
  -ms-grid-column-align: center;
}

.slider-container {
  width: 100%;
  grid-area: slider;
  align-self: center;
  -ms-grid-row: 2;
  -ms-grid-column: 1;
  -ms-grid-column-align: center;
}

.billing {
  grid-area: toggle;
  justify-self: center;
  -ms-grid-row: 4;
  -ms-grid-column: 1;
  -ms-grid-column-align: center;
}

.pricing-comp-container-bottom {
  display: flex;
  flex-direction: column;
  align-items: center;
  margin: 0 auto 5em;
}

.billing__span,
.billing-toggle,
.billing__discount {
  display: inline-block;
  vertical-align: middle;
  margin-left: 0.2em;
}

.billing__discount {
  background-color: hsl(14, 92%, 95%);
  color: hsl(15, 100%, 70%);
  padding: 0.25em 0.75em;
  border-radius: 50px;
}

/* Display abbreviated mobile discount text and hide full
     desktop text */
.billing__discount--desktop {
  display: none;
}

.billing__discount--mobile {
  display: inline-block;
}

.benefits {
  text-align: center;
}

/**************/
/* Components */
/**************/

/* The actual pricing component is made of a top
   and bottom half, in order to get border in the middle. */
.pricing-comp-container-top,
.pricing-comp-container-bottom {
  background-color: #fff;
}

.pricing-comp-container-top {
  border-top-left-radius: 7px;
  border-top-right-radius: 7px;
  border-bottom: 4px solid hsl(221, 5, 99%);
  box-shadow: 0px 0px 10px 3px rgba(150, 150, 150, 0.2);
}

.pricing-comp-container-bottom {
  border-bottom-left-radius: 7px;
  border-bottom-right-radius: 7px;
  box-shadow: 0px 5px 10px 3px rgba(150, 150, 150, 0.2);
}

/* The slider bar. The side of the bar left of the thumb
   is green and the side right of the thumb is light gray.
   This is accomplished using a CSS variable that holds the
   current value of the range/slider input and is updated
   dynamically via JavaScript. The CSS variable 
   (--bg-slider-value) is used to calculate the position of
   the thumb in percentage of the width of the slider bar.
   This calc() is used in a linear-gradient() to produce the
   bi-colored slider bar. */

/* The slider bar base styles */
.slider {
  appearance: none;
  width: 100%;
  height: 90px;
  border-radius: 150px;
  margin: 15px auto;
}

/* The slider bar Chrome & Safari */
.slider::-webkit-slider-runnable-track {
  appearance: none;
  border: none;
  background-image: linear-gradient(
    to right,
    hsl(174, 77%, 80%) calc(var(--bg-slider-value) * 100% / 4),
    hsl(224, 65%, 95%) calc(var(--bg-slider-value) * 100% / 4)
  );
  background-repeat: no-repeat;
  height: 10px;
  border-radius: 50px;
}

/* Firefox slider bar */
.slider::-moz-range-track {
  height: 10px;
  border-radius: 50px;
  background: hsl(224, 65%, 95%);
}

.slider::-moz-range-progress {
  height: 10px;
  border-radius: 50px;
  background: hsl(174, 77%, 80%);
}

/* Microsoft slider bar */
/* Creating a thick transparent border allows the thumb to be visible 
   outside of the track. Then make the excess track background white to match
   the component background. */
.slider::-ms-track {
  width: 100%;
  border: 30px solid transparent;
  border-radius: 50px;
  background-color: white;
  color: transparent; /* Removes tick marks in IE */
}

.slider::-ms-fill-lower {
  height: 10px;
  border-radius: 50px;
  background: hsl(174, 77%, 80%);
}

.slider::-ms-fill-upper {
  height: 10px;
  border-radius: 50px;
  background: hsl(224, 65%, 95%);
}

.slider::-ms-tooltip {
  display: none;
}

/* The slider thumb Chrome & Safari */
.slider::-webkit-slider-thumb {
  position: relative;
  bottom: 13px;
  appearance: none;
  width: 35px;
  height: 35px;
  background-color: hsl(174, 86%, 45%);
  background-image: url(images/icon-slider.svg);
  background-position: center;
  background-repeat: no-repeat;
  border-radius: 50%;
  cursor: pointer;
  transition: width, height, box-shadow 250ms;
}

/* Firefox slider thumb */
.slider::-moz-range-thumb {
  border: none;
  width: 35px;
  height: 35px;
  background-color: hsl(174, 86%, 45%);
  background-image: url(images/icon-slider.svg);
  background-position: center;
  background-repeat: no-repeat;
  border-radius: 50%;
  cursor: pointer;
  transition: width, height, box-shadow 250ms;
}

/* Microsoft slider thumb */
.slider::-ms-thumb {
  border: none;
  width: 35px;
  height: 35px;
  /* padding: 35px; */
  background-color: hsl(174, 86%, 45%);
  background-image: url(images/icon-slider.svg);
  background-position: center;
  background-repeat: no-repeat;
  border-radius: 50%;
  cursor: pointer;
  transition: width, height, box-shadow 250ms;
}

.slider::-ms-thumb:hover {
  width: 38px;
  height: 38px;
  box-shadow: 0px 8px 15px 10px hsla(174, 86%, 45%, 0.2);
}

/* This is the gray toggle bar */
.billing-toggle {
  position: relative;
  width: 40px;
  height: 22px;
  border-radius: 50px;
  background-color: hsl(223, 50%, 87%);
  cursor: pointer;
}

/* Remove actual checkbox from checkbox input */
.billing-toggle input {
  opacity: 0;
  width: 0;
  height: 0;
}

/* Replace checkbox with white circle "toggler" using :before pseudo-class */
.billing-toggle__btn {
  position: absolute;
  background-color: white;
}

.billing-toggle__btn::before {
  position: absolute;
  content: "";
  width: 15px;
  height: 15px;
  top: 3px;
  left: -2px;
  border-radius: 50%;
  background-color: white;
  transition: 250ms;
}

/* Move toggle button to the right when input is checked */
input:checked + .billing-toggle__btn::before {
  transform: translateX(15px);
}

.button-trial {
  color: hsl(225, 20%, 60%);
  background-color: hsl(227, 35%, 25%);
  padding: 0.75em 3em;
  border-radius: 50px;
  margin-top: 2em;
  transition: box-shadow 250ms;
  transition: padding 250ms;
}

/* Submit button active/pressed/touched state styles for mobile */
.button-trial:active {
  padding: 1em 3.25em;
  box-shadow: 0px 2px 3px 3px rgba(50, 50, 50, 0.2);
}

/***************/
/* Media query */
/***************/

/* I put all hover states in a media query to separate hovers for mouse-enabled devices */
@media screen and (pointer: fine) {
  /* Firefox slider thumb hover state */
  .slider::-moz-range-thumb:hover {
    width: 38px;
    height: 38px;
    box-shadow: 0px 8px 15px 10px hsla(174, 86%, 45%, 0.2);
  }

  /* Chrome & Safari slider thumb hover state */
  .slider::-webkit-slider-thumb:hover {
    width: 38px;
    height: 38px;
    box-shadow: 0px 8px 15px 10px hsla(174, 86%, 45%, 0.2);
  }

  /* Submit button hover state */
  .button-trial:hover {
    padding: 1em 3.25em;
    box-shadow: 0px 2px 3px 3px rgba(50, 50, 50, 0.2);
  }
}

@media screen and (min-width: 375px) {
  .pricing-comp-container-top {
    grid-template: 75px 75px 40px / repeat(3, 1fr);
    -ms-grid-columns: 1fr 1fr 1fr;
    -ms-grid-rows: 75px 75px 40px;
    grid-template-areas:
      "pageviews . pricing"
      "slider slider slider"
      "toggle toggle toggle";
  }

  .pricing-comp-container-bottom {
    flex-direction: row;
  }

  .pageviews {
    align-self: center;
    justify-self: start;
    -ms-grid-row: 1;
    -ms-grid-column: 1;
    -ms-grid-row-align: center;
    -ms-grid-column-align: start;
  }

  .pricing {
    align-self: center;
    justify-self: end;
    -ms-grid-row: 1;
    -ms-grid-column: 3;
    -ms-grid-row-align: center;
    -ms-grid-column-align: end;
  }

  .slider-container {
    -ms-grid-row: 2;
    -ms-grid-column: 1;
    -ms-grid-column-span: 3;
    -ms-grid-row-align: center;
    -ms-grid-column-align: center;
  }

  .billing {
    justify-self: center;
    -ms-grid-row: 3;
    -ms-grid-column: 1;
    -ms-grid-column-span: 3;
    -ms-grid-column-align: center;
  }

  .billing__span,
  .billing-toggle,
  .billing__discount {
    margin-left: 0.6em;
  }

  .benefits {
    text-align: left;
  }

  .button__a {
    margin-left: auto;
  }

  .button-trial {
    margin-top: 0;
  }

  /* Display full discount text and hide abbreviated
     mobile text */
  .billing__discount--desktop {
    display: inline-block;
  }

  .billing__discount--mobile {
    display: none;
  }
}
